{{#let (get this.uiViewInfos this.state) as |uiViewInfo|}}

  <BasicModal
    ...attributes
    @name={{@name}}
    @registerManager={{this.setup}}
    @unregisterManager={{@unregisterManager}}
    as |modal|
  >

    <modal.header>
      <button
        class="btn btn-default btn-ghost btn-icon pull-right"
        aria-label="Close"
        data-test-selector="cancel"
        {{on "click" modal.cancel}}
      >
        &times;
      </button>

        <h1>{{@title}} <small>({{this.currentState.value}})</small></h1>
    </modal.header>

    <modal.body class={{this.state}}>
      {{yield (hash
        transition=this.transition
        registerUiViewInfo=(fn (mut (get this.uiViewInfos this.state)))
        modal=modal
        state=this.state
        currentState=this.currentState
      )}}
    </modal.body>

    <modal.footer class="grid -stretch">
      <button
        data-test-selector="back"
        class="cell -6of12 btn btn-default btn-ghost"
        disabled={{uiViewInfo.prevDisabled}}
        {{on "click" (fn this.transition "PREV")}}
      >
        {{if uiViewInfo.prevLabel uiViewInfo.prevLabel "Back"}}
      </button>
      <button
        data-test-selector="next"
        class="cell -6of12 btn btn-primary btn-ghost"
        disabled={{uiViewInfo.nextDisabled}}
        {{on "click" (fn this.transition "NEXT")}}
      >
        {{if uiViewInfo.nextLabel uiViewInfo.nextLabel "Next"}}
      </button>
    </modal.footer>

  </BasicModal>

{{/let}}
